#search function returns match object.If there is no match none will be returned
import re
pattern="apple"
text="I have an apple and an orange"
res=re.search(pattern,text)
print(res)


#Returns a list containing all matches
import re
pattern=r'\d+'
text="I have 10 apples and 20 orange"
res=re.findall(pattern,text)
print(res)


#Replaces one or many matches with a string
import re
text="I have an apple and banana"
pattern=r"apple"
replace=r"orange"
res=re.sub(pattern,replace,text)
print(res)



#Returns a list where the string has been split at each match
import re
pattern=r'\s+'
text="I have 10 apples and 20 orange"
res=re.split(pattern,text)
print(res)


                                          **CHECK VALID PASSWORD**
#^ indicates the start of the string
#(?=[A-Z]) indicates the string must contain at least one uppercase letter (A-Z).
#(?=.*\d) ensures that there is atleast one digit .Always use back slash
#.  indicates that it macthes any charcter except anewline.It is definately important
# .* ensures that check if the password contains at least one required character (uppercase, lowercase, special character, or digit) anywhere in the string.
#.{8,} ensures that total length should be minimum 8 or more
#$ marks the end of the string
# to check atleast one upper or lower or something we use --->?=

1.Must start with uppercase
2.Atleast one uppercase
3.Atleast one lower case
4.Atleast one digit
5.Length must be minimum of 8

import re
password="Ganga@10082003"
pattern=r'^(?=.*[A-Z])(?=.*[a-z])(?=.*[@#$%^&+=])(?=.*\d).{8,}$'
res=re.findall(pattern,password)
if res:
    print("valid")
else:
    print("Not valid")



                                              **CHECK VALID MOBILE NUMBER**
EXAMPLE1:
#number should contain 10 digits
#number should starts with 9 or 8
import re
password="7808397548"
pattern=r'[98][0-9]{9}'
res=re.findall(pattern,password)
if res:
    print("valid")
else:
    print("Not valid")



EXAMPLE2:
#The first digit should contain numbers between 6 to 9.
#The rest 9 digit can contain any number between 0 to 9.
#The mobile number can have 11 digits also by including 0 at the starting.
#The mobile number can be of 12 digits also by including 91 at the starting

#(0|91)? indicates that it is optional to start with 0 or 91
import re
def isValid(s):
	Pattern = re.compile("(0|91)?[6-9][0-9]{9}")
	return Pattern.fullmatch(s)

#s = "659908397548"#invalid bcz it has 12 digits and it doesnt starts with 0 or 91
#s="919908397548"  #valid
s="06558678823"  #valid
if (isValid(s)): 
	print ("Valid Number")	 
else :
	print ("Invalid Number") 



                                **CHECK VALID AADHAR OR NOT**
#It should have 12 digits.
#It should not start with 0 and 1.
#It should not contain any alphabet and special characters.
#It should have white space after every 4 digits.

import re
#aadhar="4234 5678 9872 9"
aadhar="4327 5678 1346"
pattern=r'^[2-9][0-9]{3}\s[0-9]{4}\s[0-9]{4}$'
ans=re.fullmatch(pattern,aadhar)
if ans:
    print("valid")
else:
    print("invalid")


                               **CHECK VALID EMAIL OR NOT**
#An email is a string separated into two parts by the @ symbol, a “personal_info” and a domain
import re
email="ganga10@1718.com"

pattern=r'[a-zA-Z0-9._+%-]+@[a-zA-Z0-9]+\.[a-zA-Z]{2,}$'

ans=re.fullmatch(pattern,email)
if ans:
    print("valid")
else:
    print("Invalid")


                                       **CHECK VALID URL OR NOT**
*Since forward slash(/) is a special character we use \/
*since dot(.) is also used in diff way to differentiate we use \.
import re
url="https://www.google.com"
#url="www.googlehgsayug.com"
#url="asvgh://www.google.com"
#url="www.google"
#url="google.com"
pattern=r'^(https:\/\/www.|http:\/\/www.|www.)[a-zA-Z._\-]+\.[a-z]{2,3}$'
res=re.match(pattern,url)
if res:
    print("valid")
else:
    print("Not valid")


